#!/bin/bash

# Script para executar todos os testes de integra√ß√£o do sistema de microsservi√ßos
echo "üß™ Executando testes de integra√ß√£o do sistema TodoList Microsservi√ßos"
echo "=================================================================="

# Cores para output
GREEN='\033[0;32m'
RED='\033[0;31m'
YELLOW='\033[1;33m'
NC='\033[0m' # No Color

# Fun√ß√£o para log com cor
log_info() {
    echo -e "${GREEN}[INFO]${NC} $1"
}

log_warn() {
    echo -e "${YELLOW}[WARN]${NC} $1"
}

log_error() {
    echo -e "${RED}[ERROR]${NC} $1"
}

# Verifica se Docker est√° rodando
if ! docker info > /dev/null 2>&1; then
    log_error "Docker n√£o est√° rodando. Por favor, inicie o Docker primeiro."
    exit 1
fi

# Verifica se Docker Compose est√° dispon√≠vel
if ! command -v docker-compose &> /dev/null; then
    log_error "Docker Compose n√£o encontrado. Por favor, instale o Docker Compose."
    exit 1
fi

# 1. Executar testes de integra√ß√£o individuais de cada servi√ßo
log_info "1. Executando testes de integra√ß√£o do auth-service..."
cd auth-service
./mvnw clean test -Dtest="*IntegrationTest"
AUTH_RESULT=$?

log_info "2. Executando testes de integra√ß√£o do task-service..."
cd ../task-service
./mvnw clean test -Dtest="*IntegrationTest" 
TASK_RESULT=$?

log_info "3. Executando testes de integra√ß√£o do pomodoro-service..."
cd ../pomodoro-service
./mvnw clean test -Dtest="*IntegrationTest"
POMODORO_RESULT=$?

# 2. Executar testes end-to-end
cd ..
log_info "4. Executando testes end-to-end com Docker Compose..."

# Para os servi√ßos antes de executar testes E2E
log_info "Parando servi√ßos existentes..."
docker-compose down > /dev/null 2>&1

# Executa os testes end-to-end
./mvnw clean test -Dtest="*EndToEndIntegrationTest" -Pintegration-test
E2E_RESULT=$?

# 3. Gerar relat√≥rio de resultados
echo ""
echo "üìä RELAT√ìRIO DE TESTES DE INTEGRA√á√ÉO"
echo "===================================="

if [ $AUTH_RESULT -eq 0 ]; then
    log_info "‚úÖ Auth Service - PASSOU"
else
    log_error "‚ùå Auth Service - FALHOU"
fi

if [ $TASK_RESULT -eq 0 ]; then
    log_info "‚úÖ Task Service - PASSOU"
else
    log_error "‚ùå Task Service - FALHOU"
fi

if [ $POMODORO_RESULT -eq 0 ]; then
    log_info "‚úÖ Pomodoro Service - PASSOU"
else
    log_error "‚ùå Pomodoro Service - FALHOU"
fi

if [ $E2E_RESULT -eq 0 ]; then
    log_info "‚úÖ End-to-End Tests - PASSOU"
else
    log_error "‚ùå End-to-End Tests - FALHOU"
fi

# Resultado final
TOTAL_FAILURES=$((AUTH_RESULT + TASK_RESULT + POMODORO_RESULT + E2E_RESULT))

echo ""
if [ $TOTAL_FAILURES -eq 0 ]; then
    log_info "üéâ TODOS OS TESTES DE INTEGRA√á√ÉO PASSARAM!"
    echo "O sistema est√° funcionando corretamente em todos os n√≠veis."
else
    log_error "üí• ALGUNS TESTES FALHARAM!"
    echo "Por favor, verifique os logs acima para detalhes sobre as falhas."
fi

echo ""
log_info "Para executar tipos espec√≠ficos de teste:"
echo "  - Apenas testes individuais: ./run-integration-tests.sh --unit-only"
echo "  - Apenas testes E2E: ./run-integration-tests.sh --e2e-only" 
echo "  - Ver logs detalhados: ./run-integration-tests.sh --verbose"

exit $TOTAL_FAILURES